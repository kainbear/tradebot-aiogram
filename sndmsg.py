import logging
import json
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import ParseMode, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.contrib.middlewares.logging import LoggingMiddleware
from aiogram.utils import executor

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
API_TOKEN = "7735642608:AAG1HgbLkfOsj8EmnLY2IYaOCwCEEd-9Zbs"

# ID –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, @your_channel)
CHANNEL_ID = "@asdtest41w"

# –í–∞—à ID –≤ Telegram, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
ADMIN_USER_ID = 1046944985

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)
dp.middleware.setup(LoggingMiddleware())


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏
def get_main_menu():
    return InlineKeyboardMarkup().add(
        InlineKeyboardButton("–û–ø–æ–≤–µ—Å—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤", callback_data="notify_all"),
        InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å —Å—Ç–æ—Ä–∏ —Å –∫–Ω–æ–ø–∫–æ–π", callback_data="add_post"),
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=["start"])
async def cmd_start(message: types.Message):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if message.from_user.id == ADMIN_USER_ID:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
        keyboard = get_main_menu()
        await message.answer(
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –∫–∞–Ω–∞–ª–∞! –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∏–ª–∏ –æ–ø–æ–≤–µ—Å—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤.",
            reply_markup=keyboard,
        )
    else:
        await message.answer(
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –∫–∞–Ω–∞–ª–∞! –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é."
        )


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª
async def send_message_to_channel(message_text: str, keyboard: InlineKeyboardMarkup = None):
    try:
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª —Å –≤–æ–∑–º–æ–∂–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        await bot.send_message(CHANNEL_ID, message_text, parse_mode=ParseMode.MARKDOWN, reply_markup=keyboard)
        logging.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª {CHANNEL_ID}")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª: {e}")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–û–ø–æ–≤–µ—Å—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤"
@dp.callback_query_handler(lambda c: c.data == "notify_all")
async def process_notify_all(callback_query: types.CallbackQuery):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if callback_query.from_user.id != ADMIN_USER_ID:
        await callback_query.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")
        return

    try:
        # –û–ø–æ–≤–µ—â–∞–µ–º –≤—Å–µ—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –∫–∞–Ω–∞–ª–∞
        notification_text = (
            "–°—é–¥–∞ –¥–∞–≤–∞–π —è —Å–∫–∞–∑–∞–ª ‚úÖ  @d4815162342d <- –°–æ–ª—å–µ—Ç –≤–∞—à–∏ –±–∞–±–∫–∏ –∫—Å—Ç–∞ ! "
        )
        await send_message_to_channel(notification_text)

        # –û—Ç–≤–µ—Ç –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏
        await callback_query.answer("–í—Å–µ –º–∞–º–æ–Ω—Ç—ã –æ–ø–æ–≤–µ—â–µ–Ω—ã!")

    except Exception as e:
        await callback_query.answer(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è: {e}")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å —Å—Ç–æ—Ä–∏ —Å –∫–Ω–æ–ø–∫–æ–π"
@dp.callback_query_handler(lambda c: c.data == "add_post")
async def add_post(callback_query: types.CallbackQuery):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if callback_query.from_user.id != ADMIN_USER_ID:
        await callback_query.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")
        return

    try:
        # –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∫–Ω–æ–ø–∫–∏ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
        notification_text = (
            "üíØ ‚öúÔ∏è –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, —Ö–æ—á—É –≤–∞–º –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ–≥–æ —Ç—Ä–µ–π–¥–µ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∞ –Ω–µ –±–æ–ª—Ç–∞–µ—Ç ‚öúÔ∏èüíØ\n\n"
            "–ü–æ—á–µ–º—É –æ–Ω?\n"
            "‚ûñ –û–±—É—á–∞—é—â–∏–π –º–∞—Ç–µ—Ä–∏–∞–ª\n"
            "‚ûñ –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è –≤ –∫–æ–º–∞–Ω–¥–µ\n"
            "‚ûñ –ü–æ–º–æ—â—å 24/7\n"
            "‚ûñ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –Ω–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–æ\n\n"
            "‚ÄºÔ∏è –ù–ï –£–ü–£–°–¢–ò –®–ê–ù–° –ó–ê–†–ê–ë–û–¢–ê–¢–¨ –°–ï–ë–ï –ù–ê –ñ–ò–ó–ù–¨ ‚ÄºÔ∏è\n\n"
            "‚ÄºÔ∏è –í—Å—Ç—É–ø–∞–π ‚û°Ô∏è‚û°Ô∏è  https://t.me/+us5nSbOSiMo2YmUy ‚¨ÖÔ∏è‚¨ÖÔ∏è"
        )
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
        info_button = InlineKeyboardButton("–ù–ï –£–ü–£–°–¢–ò –®–ê–ù–° –í -> VIP", url="https://t.me/+us5nSbOSiMo2YmUy")
        keyboard = InlineKeyboardMarkup().add(info_button)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–æ–π –≤ –∫–∞–Ω–∞–ª
        await send_message_to_channel(notification_text, keyboard)

        # –û—Ç–≤–µ—Ç –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏
        await callback_query.answer("–°—Ç–æ—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –∫–∞–Ω–∞–ª!")

    except Exception as e:
        await callback_query.answer(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")


# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def on_start():
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –ø–æ–ª–ª–∏–Ω–≥–∞
    await dp.start_polling()


if __name__ == "__main__":
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º executor –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞ –±–æ—Ç–∞
    executor.start_polling(dp, skip_updates=True)